version: '3.8'

services:
  rwwwrse:
    build:
      context: ../../..
      dockerfile: Dockerfile
      args:
        VERSION: dev
        COMMIT_SHA: local
        BUILD_DATE: local
    container_name: rwwwrse
    ports:
      - "8080:8080"   # HTTP port
      - "8443:8443"   # HTTPS port  
      - "9090:9090"   # Metrics port
    environment:
      DOPPLER_TOKEN: ${DOPPLER_TOKEN}
      DOPPLER_PROJECT: ${DOPPLER_PROJECT:-rwwwrse}
      DOPPLER_CONFIG: ${DOPPLER_CONFIG:-dev}

      RWWWRSE_SERVER_HOST: "0.0.0.0"
      RWWWRSE_SERVER_PORT: "8080"
      RWWWRSE_SERVER_HTTPS_PORT: "8443"

      RWWWRSE_TLS_ENABLED: "true"
      RWWWRSE_TLS_AUTO_CERT: "false"  # Set to true for production with real domains

      RWWWRSE_BACKENDS_ROUTES: >
        {
          "localhost": {
            "url": "http://nginx-backend:80",
            "health_path": "/",
            "timeout": "30s",
            "max_idle_conns": 100,
            "max_idle_per_host": 10,
            "dial_timeout": "10s"
          }
        }

      RWWWRSE_LOGGING_LEVEL: "info"
      RWWWRSE_LOGGING_FORMAT: "json"

      RWWWRSE_HEALTH_ENABLED: "true"
      RWWWRSE_HEALTH_INTERVAL: "30s"
      RWWWRSE_HEALTH_TIMEOUT: "5s"

      RWWWRSE_METRICS_ENABLED: "true"
      RWWWRSE_METRICS_PORT: "9090"
      RWWWRSE_METRICS_PATH: "/metrics"

      RWWWRSE_SECURITY_RATE_LIMIT_ENABLED: "true"
      RWWWRSE_SECURITY_CORS_ENABLED: "true"
      RWWWRSE_SECURITY_CORS_ORIGINS: "*"  # Restrict in production

    depends_on:
      - nginx-backend
    networks:
      - proxy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nginx-backend:
    image: nginx:alpine
    container_name: nginx-backend
    volumes:
      - ../simple/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ../simple/nginx/html:/usr/share/nginx/html:ro
    networks:
      - proxy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  proxy-network:
    driver: bridge
    name: rwwwrse-proxy-net