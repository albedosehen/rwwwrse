# TLS Secret (self-signed certificate for development)
# Generate with: kubectl create secret tls rwwwrse-tls --cert=tls.crt --key=tls.key -n rwwwrse
apiVersion: v1
kind: Secret
metadata:
  name: rwwwrse-tls
  namespace: rwwwrse
  labels:
    app: rwwwrse
    component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded self-signed certificate for development
  # These are placeholder values - replace with actual certificates
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lKQU1tNERReWlWVlJqTUEwR0NTcUdTSWIzRFFFQkN3VUFNRVV4Q3pBSkJnTlYKQkFZVEFsVlRNUk13RVFZRFZRUUlEQXBUYjIxbExWTjBZWFJsTVNFd0h3WURWUVFLREJoSmJuUmxjbTVsZENCWAphV1JuYVhSeklGQjBlU0JNZEdRd0hoY05NVGd3TmpBME1UQXpOVEF5V2hjTk1Ua3dOakEwTVRBek5UQXlXakJGCk1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQXdLVTI5dFpTMVRkR0YwWlRFaE1COEdBMVVFQ2d3WVNXNTAKWlhKdVpYUWdWMmxrWjJsMGN5QlFkSGtnVEhSa01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQgpDZ0tDQVFFQXU4bFJiQlhPb1lPQ3JoOGpla2psWURhQ3VweFJHTGJVdzhYNSsxVDJOdFhOOW9RZ0hra3JEWXpJCmhpWHNBNDJXWkhOblhyM2M5QlY5bkJwSkVzOWJBQzBMZkZ4RjVGcUdDMUJraGYzTjRxMUpJZUo2TzEwZkl5b0UKeVd1ZUNkdkVoTE9yazhVSkZORFdUYk5RUHhOU2lwaDc1YmVwNi82TkMrdHBkNzFRWE9ITkdhN0pwMXBaR3pFMgpnUlBicGF6SmtvOUkxNkVhQTFubDFIZ1dPSUF0ejFjdVMyREJKYXNBTkhCWkYwNjJYMUdtUElZYXlpQWpPVFprCjVENXJJejlJNGRxU1VpY0VXTHNLQm80SmdLTnY4VkdOeVlpS3JpWGJCZXBJU2krRnNPZ2FaZThYVHNHVFhIWFcKZDlMZGM5VU9nT3R5N1luWGhnQWlDbWZIVVJJdGtRSURBUUFCbzFBd1RqQWRCZ05WSFE0RUZnUVV4cFFUWjdFOApONEdONGpYUzBjU0JGRm9WRXhjd0h3WURWUjBqQkJnd0ZvQVV4cFFUWjdFOE40R040alhTMGNTQkZGb1ZFeGN3CkRBWURWUjBUQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBb0FLdUp2MTNkdDJ2OURINkxpdDAKTCtJOEQzSjJaQSsySGZUZWVqNXRBOE01SVpCNkNEVi9jcE9PZ3dqb1FFOVV2VkFvY2hUL29lMThCNlBzSTBvbQpEOXlWZ1F0NnRPQ3hxaTllbmxHSUU3OVN6M2wxbzNhcDk0ZVpOZ3ZwdUl0QkVRZFVwOGZzVUJhRlBkdjg4UEFQCkNiaGhwNSt5SjFlOWU2MUllZTh1VnVlQ1ZDZ2NmU281U09Pc05qQkgxeFpLOXpDZnF2bGVvZGY3MVEzSGVIZTYKOHNJL3VCaXFHQmMrM1lURktieDdpK24vSWNNZDBJUEpNZVE5WlpkckZXUGZHdXJqM1RjTExCVE1Qdll2TVVBQQpCY1dYVEFaNzR5YlNwVWVadmRqMUtoZUROTXUxdklHNWE5cWY3TlQ3M2p1cDBabXFyVVVUdUJOUlpKaDZBZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzd5VkZzRmM2aGc0S3UKSHlONlNPVmdOb0s2bkZFWXR0VER4Zm43VlBZMjFjMzJoQ0JlU1NzTmpNaUdKZXdEalpaa2MyZGV2ZHowRlgycwpHa2tTejFzQUxRdDhYRVhrV29ZTFVHU0YvYzNpclVraDRubzdYUjhqS2dUSmE1NEoyOFNFczZ1VHhRa1UwTlpOCnMxQS9FMUtLbUh2bHQ2bnIvbzBMNjJsM3ZWQmM0YzBacnNtbldsOWJNVGFCRTl1bHJNbVNqMGpYb1JvRFdlWFUKZUJZNGdDM1BWeTVMWU1FbHF3QTBjRmtYVHJaZlVhWThoaHJLSUNNNU5tVGtQbXNqUDBqaDJwSlNKd1JZdXdvRwpqZ21BbzIveHVZM0ppSXF1SmRzRjZraEtMNFd3NkJwbDd4ZE93Wk5jZGRaMzB0MXoxUTZBNjNMdGlkZUdBQ0lLClo4ZFJFaTJSQWdNQkFBRUNnZ0VCQUt6RzJXelZDL1p5dUpsbTA5aE9HN3VJQVJoT2NFUTVjSGlLTXI5TlpKSDcKNlp5VWMrNUt6SE9aT1lEWnJNUHRONnZsY3F5RCtaanBZdUc0MkI3a0VmMjBMYVlmZkRPZDh5Z0ZSTnVwRzJOSQp6T25xaGxUenNjcHZUVzZTRTlJWElpRlZ6VXBIZG1ub2tmNThQY0JRaVBxOUdhOTNzdjI2Q1puc1cyUUYySWdkCm12Y21EeVVJOXFKOWVmbVNySGp5UWVYY244V3h5ZUtKWGNZT1d6SU1YQVRmdVFOTE1jUVd1am5Zd0VEY0Rsc20KTThWRGVGcFFmZFVJZWVQeUVJR2ZkZGk1RjE1SDloTjFtWENHZEJRd084VFc5TnlVUGxOc1Yrc3kyaFBKVXRDbApSMVVyRDBGTGEwVkw5QXk5SlJqaDQ2TDJuSUNOSW5pQS9JZXdJVFQ0T1pFQ2dZRUE0U1Y2dTRzV09VZGhHOStLCmJlOXFTdXVXTGFHN2lhVUU4Q0JIdnI3T0lWWUtNdEZ3cW9qWmtZSGJzcyt6VG9vbXJlSlFOV24zZGNwOWtnVTMKY3E1VCtyWGRxL2NlNktxQmp5ZldjVjVkQXZuZlllU2doZWt1UXEyc2thSGZQb29hcDNNeUFGVUlhcE5GeVZJTQpJSFlsd2hJUThGS3o5UUxpTklET2ZtUGpjVFVDZ1lFQTFJczY5RXFhdTFpSGFDOEdVbVVLWjhDL3hHS1JOQ0EwCnp1bzdUTTRoQkZCTktXckhORzRqakdlUGVWQlNFNWllMGxjVHF0YURYR2pNaFZUcjBrdEZzU25Gb3c3Zko0S1MKaVluU3g1VFEzOEFUOGIwWU5kem9GTmlZSEtSYjlwZFE4L0VqaDR3aDVNQU9LbFMySjJVNUx6N2hDcGNGbXUrRApIdWY0Yk1oTFVOMFNnWUVBd25JUGlJbEw3TW5OUmhGbUd2M1BEQUtJaDZHeDByRDJhVFJBdlZOWFV2VUdlMHBFCjlmNytOaE5tVmFSTzVxSWtIVzdOa3d0eUE5NzNEMWdpWFZOTU1PTmJjSS9TSnNrZDNGZDg4cFBrMWYxb2U2U2kKdk1xb04rdkZaM2ZEblYxTU9KMlpuS1puTC9mNnhiWU5qVW1rU0IrOGZSeHhobE1hQk43WUxNVE5sdEVDZ1lFQWgKYm9mWEc0cWhuem5rU2w5Zys3aGV6VkNrb2FBQ1NVSnBaTFJzK1h1TnhNTjFySVdNVUNYR0ZFNnI0RGhEcGt1UApaajNzY3ZJNmRWZnVSN2Q2VjRrc1VKTTB6c0p3ZFNicFJ0a3FGNEpHZGNDcHMrUTdGQ0FvOG01ZitlTUZjQkhiCnFNT3dMQnZnU2E3eVRLV2xzT2ovUkJuUDdKS1hOeG52aElmcjczZWVIbEVDZ1lCUlJJaXM3REVJOXZmVXBGa1YKREtIczVsQXZhWEpKWVQ4VjE1OUZjMnBVKzNySDNJWGM1dnZ5TlNRMnFCcklwREs1R2tMeGZrWnhhbWtQalN1VAprZ3VGbWJJRnJsL0l5NldxY3JQQm1FdjhEMmxwMWl3WldVVTZKUmhhY1EwelVGSTFuRlNzUCsySWUzZzU4ODhxCm1IQVFDT3F6QTBQdGdSOHV3UW9hZWR5ODNnPT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=

---
# Registry Secret (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: rwwwrse
  labels:
    app: rwwwrse
    component: registry
type: kubernetes.io/dockerconfigjson
data:
  # Replace with actual registry credentials
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InVzZXIiLCJwYXNzd29yZCI6InBhc3MiLCJhdXRoIjoiZFhObGNqcHdZWE56In19fQ==

---
# Generic secret for application configuration
apiVersion: v1
kind: Secret
metadata:
  name: rwwwrse-secrets
  namespace: rwwwrse
  labels:
    app: rwwwrse
    component: secrets
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  # echo -n "your-secret-value" | base64
  database-password: ZGV2LXBhc3N3b3Jk
  api-key: ZGV2LWFwaS1rZXk=
  jwt-secret: ZGV2LWp3dC1zZWNyZXQ=
  encryption-key: ZGV2LWVuY3J5cHRpb24ta2V5