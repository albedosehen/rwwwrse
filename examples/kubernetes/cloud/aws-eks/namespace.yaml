# Namespace for rwwwrse on AWS EKS
apiVersion: v1
kind: Namespace
metadata:
  name: rwwwrse
  labels:
    name: rwwwrse
    environment: production
    managed-by: eks
    aws.amazon.com/eks-cluster-name: rwwwrse-cluster
  annotations:
    aws.amazon.com/load-balancer-backend-protocol: tcp
    aws.amazon.com/load-balancer-type: nlb
---
# Resource quota for production workloads
apiVersion: v1
kind: ResourceQuota
metadata:
  name: rwwwrse-quota
  namespace: rwwwrse
spec:
  hard:
    requests.cpu: "10"
    requests.memory: 20Gi
    limits.cpu: "20"
    limits.memory: 40Gi
    persistentvolumeclaims: "20"
    services: "20"
    secrets: "20"
    configmaps: "20"
    services.loadbalancers: "5"
    services.nodeports: "10"
---
# Limit range for pods
apiVersion: v1
kind: LimitRange
metadata:
  name: rwwwrse-limits
  namespace: rwwwrse
spec:
  limits:
  - default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - default:
      storage: "10Gi"
    type: PersistentVolumeClaim
---
# Network policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rwwwrse-network-policy
  namespace: rwwwrse
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - namespaceSelector:
        matchLabels:
          name: rwwwrse
    - podSelector: {}
  - from: []
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  - to:
    - namespaceSelector:
        matchLabels:
          name: rwwwrse
    - podSelector: {}